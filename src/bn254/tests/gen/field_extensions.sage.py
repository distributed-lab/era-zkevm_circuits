

# This file was *autogenerated* from the file field_extensions.sage
from sage.all_cmdline import *   # import sage library

_sage_const_21888242871839275222246405745257275088696311157297823662689037894645226208583 = Integer(21888242871839275222246405745257275088696311157297823662689037894645226208583); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_100 = Integer(100); _sage_const_0 = Integer(0); _sage_const_4 = Integer(4)#! File for validating field extension arithmetic
import json

# --- Fq2 tests ---

# Defining the base prime field
q = _sage_const_21888242871839275222246405745257275088696311157297823662689037894645226208583  # EC group order
Fq = GF(q) 

# Defining the Fq2 extension
R = PolynomialRing(Fq, names=('x',)); (x,) = R._first_ngens(1)
Fq2 = GF(q**_sage_const_2 , modulus=x**_sage_const_2 +_sage_const_1 , names=('u',)); (u,) = Fq2._first_ngens(1)

f = Fq2.random_element()
print(f)

# Generating tests
print('Preparing the fq2 tests...')
tests_dict = {'tests': []}

FQ2_TESTS_NUMBER = _sage_const_100 

for _ in range(FQ2_TESTS_NUMBER):
    f = Fq2.random_element()
    g = Fq2.random_element()
    sum = f + g
    diff = f - g
    prod = f * g
    quot = f / g

    tests_dict['tests'].append({
        'scalar_1': {
            'c0': str(f[_sage_const_0 ]), 
            'c1': str(f[_sage_const_1 ])
        },
        'scalar_2': {
            'c0': str(g[_sage_const_0 ]), 
            'c1': str(g[_sage_const_1 ])
        },
        'expected': {
            'sum': {
                'c0': str(sum[_sage_const_0 ]), 
                'c1': str(sum[_sage_const_1 ])
            },
            'diff': {
                'c0': str(diff[_sage_const_0 ]), 
                'c1': str(diff[_sage_const_1 ])
            },
            'prod': {
                'c0': str(prod[_sage_const_0 ]), 
                'c1': str(prod[_sage_const_1 ])
            },
            'quot': {
                'c0': str(quot[_sage_const_0 ]), 
                'c1': str(quot[_sage_const_1 ])
            }
        }
    })

print('Fq2 tests formed successfully!')

# Saving the json file
FILE_NAME = '../json/fq2_tests.json'

print(f'Saving the fq2 tests to {FILE_NAME}...')
with open(FILE_NAME, 'w') as f:
    json.dump(tests_dict, f, indent=_sage_const_4 )

print('Successfully saved the fq2 tests!')

#_.<Y> = PolynomialRing(R2)
#xi = -X + 1
#R6.<Y> = R2.extension(Y^3-xi, 'Y')
#R6.is_field = lambda : True
#_.<Z> = PolynomialRing(R6)
#R12.<Z> = R6.extension(Z^2-(Y), 'Z')
#R12 

